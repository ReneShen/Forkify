var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _ViewJs = require('./View.js');
var _ViewJsDefault = _parcelHelpers.interopDefault(_ViewJs);
require('url:../../img/icons.svg');
function _defineProperty(obj, key, value) {
  if ((key in obj)) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
class AddRecipeView extends _ViewJsDefault.default {
  constructor() {
    super();
    _defineProperty(this, "_parentElement", document.querySelector('.upload'));
    _defineProperty(this, "_window", document.querySelector('.add-recipe-window'));
    _defineProperty(this, "_overlay", document.querySelector('.overlay'));
    _defineProperty(this, "_btnOpen", document.querySelector('.nav__btn--add-recipe'));
    _defineProperty(this, "_btnClose", document.querySelector('.btn--close-modal'));
    _defineProperty(this, "_message", 'Recipe was succesfully uploaded :)');
    this._addHandlerShowWindow();
    this._addHandlerHideWindow();
  }
  toggleWindow() {
    this._window.classList.toggle('hidden');
    this._overlay.classList.toggle('hidden');
  }
  _addHandlerShowWindow() {
    this._btnOpen.addEventListener('click', this.toggleWindow.bind(this));
  }
  _addHandlerHideWindow() {
    this._btnClose.addEventListener('click', this.toggleWindow.bind(this));
    this._overlay.addEventListener('click', this.toggleWindow.bind(this));
  }
  addHandlerUpload(handler) {
    this._parentElement.addEventListener('submit', function (e) {
      e.preventDefault();
      const dataArr = [...new FormData(this)];
      const data = Object.fromEntries(dataArr);
      handler(data);
    });
  }
  _generateMarkup() {}
}
exports.default = new AddRecipeView();
